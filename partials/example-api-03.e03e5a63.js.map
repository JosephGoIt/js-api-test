{"mappings":"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","sources":["src/js/example-api-03.js"],"sourcesContent":["const BASE_URL = \"https://65f2d1ae105614e6549efd32.mockapi.io/todos\";\nconst addBtnEl = document.getElementById(\"addBtn\");\nconst myUL = document.getElementById(\"myUL\");\nconst myInput = document.getElementById(\"myInput\");\n\n// Function to fetch all todos\nconst getTodos = async () => {\n    try {\n        const response = await fetch(BASE_URL);\n        if (!response.ok) {\n            throw new Error('Failed to fetch todos');\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n// Function to add a todo\nconst addTodo = async (newTodo) => {\n    try {\n        const response = await fetch(BASE_URL, {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newTodo),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to add todo');\n        }\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n// Function to update a todo\nconst updateTodo = async (todoId, updatedTodo) => {\n    try {\n        const response = await fetch(`${BASE_URL}/${todoId}`, {\n            method: \"PUT\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(updatedTodo),\n        });\n        if (!response.ok) {\n            throw new Error('Failed to update todo');\n        }\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n// Function to delete a todo\nconst deleteTodo = async (todoId) => {\n    try {\n        const response = await fetch(`${BASE_URL}/${todoId}`, {\n            method: \"DELETE\"\n        });\n        if (!response.ok) {\n            throw new Error('Failed to delete todo');\n        }\n    } catch (error) {\n        console.error(error);\n    }\n};\n\n// Event listener for DOMContentLoaded\nwindow.addEventListener('DOMContentLoaded', fillTodoList);\n\n// Function to fill the todo list\nasync function fillTodoList() {\n    const todos = await getTodos();\n    // console.log(todos);\n    if (todos) {\n        todos.forEach(({ text, isDone, id }) => createLI(text, isDone, id));\n    }\n}\n\n// Function to create a list item\nfunction createLI(text, isDone, id) {\n    const li = document.createElement(\"li\");\n    li.id = id; //assigning li's id same as todo's id\n    myUL.appendChild(li);\n    addUpdateCheckbox(li, isDone);\n    addText(li , text);\n    addCloseBtn(li);\n}\n\n// Function to add update checkbox\nfunction addUpdateCheckbox(li, isDone) {\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkbox.className = \"update\";\n    checkbox.checked = isDone;\n    li.appendChild(checkbox);\n}\n\n// Function to add text\nfunction addText(li, text) {\n    const span = document.createElement(\"span\");\n    const txt = document.createTextNode(text);\n    span.className = \"text\";\n    span.appendChild(txt);\n    li.appendChild(span);\n}\n\n// Function to add close button\nfunction addCloseBtn(li) {\n    const span = document.createElement(\"span\");\n    const txt = document.createTextNode(\"delete\");\n    span.className = \"close\";\n    span.appendChild(txt);\n    li.appendChild(span);\n}\n\n// Function to get the id of the corresponding li element when its close button is clicked\nfunction getLiId(span) {\n    const li = span.parentNode;\n    return li.id; // Assuming the id of li element is set as todo's id\n}\n\n// Event listener for add button click\naddBtnEl.addEventListener('click', async () => {\n    const todo = myInput.value.trim();\n    if (todo === '') {\n        alert(\"Please enter a todo\");\n        return;\n    }\n    const newTodo = { \"text\": `${todo}`, \"isDone\": false };\n    await addTodo(newTodo); //await for new todo to be added\n    const allTodos = await getTodos();\n    const todosId = allTodos.length\n    createLI(todo, false, todosId);  \n});\n\n// Event listener for close button clicks using event delegation\ndocument.addEventListener('click', async (event) => {\n    const target = event.target;\n    if (target.classList.contains('close')) {\n        // alert(target.parentNode.className)\n        const liId = getLiId(target);\n        // alert(liId);\n        // Perform further actions with the liId if needed\n        await deleteTodo(liId);\n        // Remove the corresponding li element from the DOM\n        target.parentNode.remove();\n    }\n});\n\n// Event listener for checkbox clicks using event delegation\nmyUL.addEventListener('change', async (event) => {\n    const target = event.target;\n    if (target.classList.contains('update')) {\n        const liId = getLiId(target);\n        const isChecked = target.checked;\n        console.log(\"Updating LI with ID:\", liId, \"Is Done:\", isChecked);\n        await updateTodo(liId, { isDone: isChecked });\n    }\n});"],"names":["$bpxeT","parcelRequire","$9e6f1db1f3612e03$var$BASE_URL","$9e6f1db1f3612e03$var$addBtnEl","document","getElementById","$9e6f1db1f3612e03$var$myUL","$9e6f1db1f3612e03$var$myInput","$9e6f1db1f3612e03$var$getTodos","$parcel$interopDefault","$2TvXO","mark","_callee","response","fetch","_ctx","sent","ok","Error","json","console","error","t0","$9e6f1db1f3612e03$var$addTodo","newTodo","method","headers","body","JSON","stringify","$9e6f1db1f3612e03$var$updateTodo","todoId","updatedTodo","concat","$9e6f1db1f3612e03$var$deleteTodo","$9e6f1db1f3612e03$var$_fillTodoList","todos","forEach","param","$9e6f1db1f3612e03$var$createLI","text","isDone","id","apply","this","arguments","li","createElement","appendChild","checkbox","type","className","checked","$9e6f1db1f3612e03$var$addUpdateCheckbox","span","txt","createTextNode","$9e6f1db1f3612e03$var$addText","$9e6f1db1f3612e03$var$addCloseBtn","$9e6f1db1f3612e03$var$getLiId","parentNode","window","addEventListener","todo","allTodos","todosId","value","trim","alert","length","event","target","liId","classList","contains","remove","isChecked","log"],"version":3,"file":"example-api-03.e03e5a63.js.map"}